name: Release

on:
  push:
    branches:
      - master

jobs:
  release-binary:
    runs-on: ubuntu-latest
    if: contains(github.ref, 'tag')
    permissions:
      id-token: write
      contents: write
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - run: git fetch --force --tags

      - uses: actions/setup-go@v3
        with:
          go-version: 1.19.x
          check-latest: true

      - uses: sigstore/cosign-installer@main

      - uses: goreleaser/goreleaser-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          distribution: goreleaser
          version: latest
          args: release --rm-dist

  release-image:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      packages: write
    steps:
      - uses: actions/checkout@v3

      - uses: sigstore/cosign-installer@main

      - uses: docker/setup-buildx-action@v2

      - id: tag-types
        run: |
          if [[ ${{ contains(github.ref, 'tag') }} == true ]]; then
            TAGS=$(cat << EOF
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}
            type=semver,pattern={{major}}.{{minor}}
            type=ref,event=branch
            type=sha,format=long
            EOF
            )
          else
            TAGS=$(cat << EOF
            type=ref,event=branch
            type=sha,format=long
            EOF
            )
          fi

          # https://trstringer.com/github-actions-multiline-strings
          echo "TAGS<<EOF" >> $GITHUB_ENV
          echo "$TAGS" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - id: metadata
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/${{ github.repository }}
          tags: ${{ env.TAGS }}

      - uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - id: get-tag
        uses: olegtarasov/get-tag@v2.1

      - id: build-push
        uses: docker/build-push-action@v3
        with:
          push: true
          build-args: |
            VERSION=${{ steps.get-tag.outputs.tag }}
          tags: ${{ steps.metadata.outputs.tags }}
          labels: ${{ steps.metadata.outputs.labels }}

      - env:
          COSIGN_EXPERIMENTAL: "true"
        run: cosign sign ghcr.io/${{ github.repository }}@${{ steps.build-push.outputs.digest }}    
